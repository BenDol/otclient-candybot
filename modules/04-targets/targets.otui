Panel
  id: TargetsPanel
  anchors.left: parent.left
  anchors.right: parent.right
  anchors.top: parent.top
  padding-right: 8
  height: 500

  BotOptionCheckBox
    id: AutoTarget
    width: 90
    !text: tr('Auto Target')
    !tooltip: tr('Automatically target creatures in the target list.')
    anchors.left: parent.left
    anchors.top: parent.top

  TextList
    id: TargetList
    anchors.top: AutoTarget.bottom
    anchors.left: AutoTarget.left
    margin-bottom: 5
    margin-top: 5
    padding: 1
    focusable: false
    vertical-scrollbar: TargetScrollBar
    width: 140
    height: 235
    auto-focus: first

  VerticalScrollBar
    id: TargetScrollBar
    anchors.top: TargetList.top
    anchors.bottom: TargetList.bottom
    anchors.left: TargetList.right
    step: 14
    pixels-scroll: true

  Panel
    id: SettingPanel
    anchors.left: TargetScrollBar.right
    anchors.right: parent.right
    anchors.top: parent.top
    anchors.bottom: TargetList.bottom
    enabled: true

    Button
      id: PrevSettingButton
      !text: tr('<')
      anchors.left: parent.left
      anchors.top: parent.top
      margin-bottom: 5
      width: 15
      height: 15

    Button
      id: NewSettingButton
      !text: tr('New Setting')
      anchors.right: NextSettingButton.left
      anchors.left: PrevSettingButton.right
      anchors.top: PrevSettingButton.top
      margin-left: 8
      margin-right: 8
      width: 91
      height: 15

    Button
      id: NextSettingButton
      !text: tr('>')
      anchors.right: parent.right
      anchors.top: PrevSettingButton.top
      width: 15
      height: 15

    Panel
      anchors.top: PrevSettingButton.bottom
      anchors.bottom: parent.bottom
      anchors.left: parent.left
      anchors.right: parent.right
      //border-width: 1

      Label
        id: TargetSettingLabel
        !text: tr('Setting:')
        anchors.top: parent.top
        anchors.left: parent.left
        margin-left: 5
        margin-top: 5

      Label
        id: TargetSettingNumber
        !text: tr('#1 of 1')
        anchors.top: TargetSettingLabel.top
        anchors.left: TargetSettingLabel.right
        margin-left: 5

      Label
        id: SettingNameLabel
        !text: tr('Name')
        !tooltip: tr('The name of the creature to target')
        anchors.top: TargetSettingLabel.bottom
        anchors.left: TargetSettingLabel.left
        margin-top: 5
        margin-left: 5

      TextEdit
        id: SettingNameEdit
        anchors.top: prev.bottom
        anchors.left: prev.left
        anchors.right: parent.right
        margin-top: 3

      Label
        id: SettingHpRangeLabel
        text: Health Range
        !tooltip: tr('The minimum health percent required to target.')
        anchors.top: prev.bottom
        anchors.left: prev.left
        margin-top: 5

      TextEdit
        id: SettingHpRange1
        anchors.top: prev.bottom
        anchors.left: prev.left
        width: 40
        margin-top: 3
        @onTextChange: |
          local setting = TargetsModule.getCurrentSetting()
          if setting then
            setting:setRange(self:getText(), 1)
          end

      Label
        !text: tr('to')
        anchors.top: prev.top
        anchors.left: prev.right
        width: 20
        margin-left: 7
        margin-right: 3
        margin-top: 3

      TextEdit
        id: SettingHpRange2
        anchors.top: SettingHpRange1.top
        anchors.left: prev.right
        width: 40
        @onTextChange: |
          local setting = TargetsModule.getCurrentSetting()
          if setting then
            setting:setRange(self:getText(), 2)
          end

      Label
        text: %
        anchors.top: prev.top
        anchors.left: prev.right
        width: 20
        margin-left: 7
        margin-right: 3
        margin-top: 3

      Label
        id: SettingStanceLabel
        !text: tr('Stance')
        !tooltip: tr('The stance desired for this target.')
        anchors.top: SettingHpRange1.bottom
        anchors.left: SettingHpRange1.left
        margin-top: 6

      ComboBox
        id: SettingStanceList
        anchors.left: prev.left
        anchors.right: parent.right
        anchors.top: prev.bottom
        margin-top: 3

      Label
        id: SettingModeLabel
        !text: tr('Attack Mode')
        !tooltip: tr('The attack mode desired for this target.')
        anchors.top: prev.bottom
        anchors.left: prev.left
        margin-top: 6

      ComboBox
        id: SettingModeList
        anchors.left: prev.left
        anchors.right: parent.right
        anchors.top: prev.bottom
        margin-top: 3

      TextEdit
        id: SettingModeText
        anchors.top: prev.bottom
        anchors.left: prev.left
        anchors.right: parent.right
        margin-top: 6
        visible: false
        height: 1
        @onTextChange: |
          local setting = TargetsModule.getCurrentSetting()
          if setting then
            local attack = setting:getAttack()
            if attack then
              attack:setWords(self:getText())
            end
          end

      CheckBox
        id: SettingLoot
        !text: tr('Loot')
        !tooltip: tr('Loot this target when it dies.')
        width: 50
        anchors.left: prev.left
        anchors.top: prev.bottom
        margin-top: 6
        @onCheckChange: |
          local target = TargetsModule.getSelectedTarget()
          if target then
            target:setLoot(self:isChecked())
          end

      CheckBox
        id: SettingAlarm
        !text: tr('Alarm')
        !tooltip: tr('Play a sound alert when a creature appears.')
        anchors.left: prev.right
        anchors.right: parent.right
        anchors.top: prev.top
        margin-left: 5
        @onCheckChange: |
          local target = TargetsModule.getSelectedTarget()
          if target then
            target:setAlarm(self:isChecked())
          end

  HorizontalSeparator
    anchors.left: parent.left
    anchors.right: parent.right
    anchors.top: prev.bottom
    margin-top: 10

  Panel
    id: SaveLoadPanel
    anchors.left: parent.left
    anchors.right: parent.right
    anchors.top: prev.bottom
    anchors.bottom: parent.bottom

    Label
      text: Save & Load:
      anchors.left: parent.left
      anchors.top: parent.top
      margin-top: 4
      width: 130

    TextList
      id: LoadList
      anchors.top: prev.bottom
      anchors.left: prev.left
      margin-bottom: 5
      margin-top: 5
      padding: 1
      focusable: false
      vertical-scrollbar: LoadSettingScrollBar
      width: 150
      height: 80

    VerticalScrollBar
      id: LoadSettingScrollBar
      anchors.top: LoadList.top
      anchors.bottom: LoadList.bottom
      anchors.right: LoadList.right
      step: 14
      pixels-scroll: true

    Button
      id: LoadButton
      !text: tr('Load Targets')
      anchors.top: LoadList.bottom
      anchors.left: LoadList.left
      anchors.right: LoadList.right
      margin-top: 3
      enabled: false

    Label
      id: NewLabel
      !text: tr('Name:')
      anchors.top: LoadList.top
      anchors.left: LoadList.right
      width: 35 
      margin-top: 2
      margin-left: 6

    TextEdit
      id: SaveNameEdit
      anchors.top: LoadList.top
      anchors.left: prev.right
      anchors.right: parent.right
      margin-left: 6

    Button
      id: SaveButton
      !text: tr('Save Targets')
      anchors.top: prev.bottom
      anchors.left: NewLabel.left
      anchors.right: parent.right
      margin-top: 8
      @onClick: |
        local parent = self:getParent()
        local file = parent:getChildById('SaveNameEdit'):getText()
        TargetsModule.saveTargets(file)