Panel
  id: TargetsPanel
  anchors.left: parent.left
  anchors.right: parent.right
  anchors.top: parent.top
  padding-right: 8
  height: 500

  BotOptionCheckBox
    id: AutoTarget
    width: 90
    !text: tr('Auto Target')
    !tooltip: tr('Automatically target creatures in the target list.')
    anchors.left: parent.left
    anchors.top: parent.top

  TextList
    id: TargetList
    anchors.top: AutoTarget.bottom
    anchors.left: AutoTarget.left
    margin-bottom: 5
    margin-top: 5
    padding: 1
    focusable: false
    phantom: true
    vertical-scrollbar: TargetScrollBar
    width: 130
    height: 220
    auto-focus: first

  VerticalScrollBar
    id: TargetScrollBar
    anchors.top: TargetList.top
    anchors.bottom: TargetList.bottom
    anchors.left: TargetList.right
    step: 18
    pixels-scroll: true

  Button
    id: AdvancedButton
    !text: tr('Advanced Settings')
    anchors.top: TargetList.bottom
    anchors.left: TargetList.left
    anchors.right: TargetScrollBar.right
    margin-top: 5
    height: 23

  Panel
    id: SettingPanel
    anchors.left: TargetScrollBar.right
    anchors.right: parent.right
    anchors.top: parent.top
    anchors.bottom: AdvancedButton.bottom
    enabled: true

    Button
      id: PrevSettingButton
      !text: tr('<')
      anchors.left: parent.left
      anchors.top: parent.top
      margin-bottom: 5
      width: 18
      height: 19

    Button
      id: NewSettingButton
      !text: tr('New Setting')
      anchors.right: NextSettingButton.left
      anchors.left: PrevSettingButton.right
      anchors.top: PrevSettingButton.top
      anchors.bottom: PrevSettingButton.bottom
      margin-left: 4
      margin-right: 4

    Button
      id: NextSettingButton
      !text: tr('>')
      anchors.right: parent.right
      anchors.top: PrevSettingButton.top
      anchors.bottom: PrevSettingButton.bottom
      width: 18

    Panel
      anchors.top: PrevSettingButton.bottom
      anchors.bottom: parent.bottom
      anchors.left: parent.left
      anchors.right: parent.right
      //border-width: 1

      Label
        id: TargetSettingLabel
        !text: tr('Setting:')
        anchors.top: parent.top
        anchors.left: parent.left
        margin-left: 5
        margin-top: 5

      Label
        id: TargetSettingNumber
        !text: tr('#1 of 1')
        anchors.top: TargetSettingLabel.top
        anchors.left: TargetSettingLabel.right
        margin-left: 5

      Label
        id: SettingNameLabel
        !text: tr('Name')
        !tooltip: tr('The name of the creature to target')
        anchors.top: TargetSettingLabel.bottom
        anchors.left: TargetSettingLabel.left
        margin-top: 5
        margin-left: 5

      TextEdit
        id: SettingNameEdit
        anchors.top: prev.bottom
        anchors.left: prev.left
        width: 125
        margin-top: 3

      Label
        id: SettingHpRangeLabel
        text: Health Range
        !tooltip: tr('The minimum health percent required to target.')
        anchors.top: SettingNameLabel.top
        anchors.left: SettingHpRange1.left

      SpinBox
        id: SettingHpRange1
        anchors.top: SettingNameEdit.top
        anchors.left: SettingNameEdit.right
        width: 32
        height: 22
        margin-left: 8
        minimum: 1
        maximum: 100
        buttons: false
        focusable: true
        mouse-scroll: false
        @onTextChange: |
          local setting = TargetsModule.getCurrentSetting()
          if setting then
            setting:setRange(self:getText(), 1)
          end

      Label
        !text: tr('to')
        anchors.top: prev.top
        anchors.left: prev.right
        width: 16
        margin-left: 5
        margin-top: 3

      SpinBox
        id: SettingHpRange2
        anchors.top: SettingHpRange1.top
        anchors.left: prev.right
        width: 32
        height: 22
        minimum: 0
        maximum: 100
        focusable: true
        buttons: false
        mouse-scroll: false
        @onTextChange: |
          local setting = TargetsModule.getCurrentSetting()
          if setting then
            setting:setRange(self:getText(), 2)
          end

      Label
        id: SettingMovementLabel
        !text: tr('Movement')
        !tooltip: tr('The movement desired for this target.')
        anchors.top: SettingNameEdit.bottom
        anchors.left: SettingNameEdit.left
        margin-top: 5

      ComboBox
        id: SettingMovementList
        anchors.left: prev.left
        anchors.top: prev.bottom
        width: 145
        margin-top: 3
        mouse-scroll: false

      Label
        id: SettingDangerLabel
        !text: tr('Danger')
        !tooltip: tr('The danger level of this targets setting.')
        anchors.bottom: SettingDangerBox.top
        anchors.left: SettingDangerBox.left
        margin-bottom: 3

      SpinBox
        id: SettingDangerBox
        anchors.top: SettingMovementList.top
        anchors.left: SettingMovementList.right
        anchors.right: parent.right
        margin-left: 6
        minimum: 1
        maximum: 999999999
        focusable: true
        mouse-scroll: false
        height: 22

      Label
        id: SettingStrategyLabel
        !text: tr('Strategy')
        !tooltip: tr('The strategy desired for this target.')
        anchors.top: SettingMovementList.bottom
        anchors.left: SettingMovementList.left
        margin-top: 5

      ComboBox
        id: SettingStrategyList
        anchors.left: prev.left
        anchors.top: prev.bottom
        anchors.right: parent.right
        margin-top: 3
        mouse-scroll: false

      Label
        id: SettingModeLabel
        !text: tr('Attack')
        !tooltip: tr('Set how we will attack the target.')
        anchors.top: SettingStrategyList.bottom
        anchors.left: SettingStrategyList.left
        margin-top: 5

      ComboBox
        id: SettingModeList
        anchors.left: SettingModeLabel.left
        anchors.right: parent.right
        anchors.top: SettingModeLabel.bottom
        margin-top: 3
        mouse-scroll: false

      TextEdit
        id: SettingModeText
        anchors.top: prev.bottom
        anchors.left: prev.left
        anchors.right: parent.right
        margin-top: 5
        visible: false
        height: 1
        @onTextChange: |
          local setting = TargetsModule.getCurrentSetting()
          if setting then
            local attack = setting:getAttack()
            if attack then
              attack:setWords(self:getText())
            end
          end

      Item
        id: SettingModeItem
        anchors.left: SettingModeList.left
        anchors.top: SettingModeList.bottom
        margin-top: 5
        virtual: true
        visible: false
        height: 1

      Button
        id: SelectModeItem
        !text: tr('Select Item')
        width: 70
        height: 1
        visible: false
        anchors.right: parent.right
        anchors.left: prev.right
        anchors.top: prev.top
        margin-left: 10
        @onClick: Helper.startChooseItem(TargetsModule.onChooseSettingItem)

      CheckBox
        id: SettingLoot
        !text: tr('Loot')
        !tooltip: tr('Loot this target when it dies.')
        width: 55
        margin-left: 10
        anchors.left: parent.left
        anchors.bottom: parent.bottom
        @onCheckChange: |
          local target = TargetsModule.getSelectedTarget()
          if target then
            target:setLoot(self:isChecked())
          end

      CheckBox
        id: SettingFollow
        !text: tr('Follow')
        !tooltip: tr('Follow this creature when targeting.')
        anchors.left: SettingLoot.right
        anchors.bottom: SettingLoot.bottom
        width: 55
        @onCheckChange: |
          local setting = TargetsModule.getCurrentSetting()
          if setting then
            setting:setFollow(self:isChecked())
          end

      FightOffensiveBox
        id: StanceOffensiveBox
        !tooltip: tr('Attack target in offensive stance')
        anchors.top: next.top
        anchors.right: next.left
        margin: 0 4 0 0

      FightBalancedBox
        id: StanceBalancedBox
        !tooltip: tr('Attack target in balanced stance')
        anchors.top: next.top
        anchors.right: next.left
        margin: 0 4 0 0

      FightDefensiveBox
        id: StanceDefensiveBox
        !tooltip: tr('Attack target in defensive stance')
        anchors.bottom: parent.bottom
        anchors.right: parent.right
        margin: 0 4 0 0

  HorizontalSeparator
    anchors.left: parent.left
    anchors.right: parent.right
    anchors.top: prev.bottom
    margin-top: 10

  Panel
    id: SaveLoadPanel
    anchors.left: parent.left
    anchors.right: parent.right
    anchors.top: prev.bottom
    anchors.bottom: parent.bottom

    Label
      text: Save & Load:
      anchors.left: parent.left
      anchors.top: parent.top
      margin-top: 4
      width: 130

    TextList
      id: LoadList
      anchors.top: prev.bottom
      anchors.left: prev.left
      margin-bottom: 5
      margin-top: 5
      padding: 1
      focusable: false
      phantom: true
      vertical-scrollbar: LoadSettingScrollBar
      width: 190
      height: 80

    VerticalScrollBar
      id: LoadSettingScrollBar
      anchors.top: LoadList.top
      anchors.bottom: LoadList.bottom
      anchors.left: LoadList.right
      step: 14
      pixels-scroll: true

    Button
      id: LoadButton
      !text: tr('Load Selected')
      anchors.top: LoadList.bottom
      anchors.left: LoadList.left
      anchors.right: LoadSettingScrollBar.right
      margin-top: 3
      enabled: false
      @onClick: |
        local parent = self:getParent()
        local focusedChild = parent:getChildById('LoadList'):getFocusedChild()
        if focusedChild then
          TargetsModule.loadTargets(focusedChild:getText())
        end

    Label
      id: NewLabel
      !text: tr('Name:')
      anchors.top: LoadSettingScrollBar.top
      anchors.left: LoadSettingScrollBar.right
      width: 35 
      margin-top: 2
      margin-left: 6

    TextEdit
      id: SaveNameEdit
      anchors.top: LoadSettingScrollBar.top
      anchors.left: prev.right
      anchors.right: parent.right
      margin-left: 6

    Button
      id: SaveButton
      !text: tr('Save Targets')
      anchors.top: prev.bottom
      anchors.left: NewLabel.left
      anchors.right: parent.right
      margin-top: 8
      @onClick: |
        local parent = self:getParent()
        local file = parent:getChildById('SaveNameEdit'):getText()
        TargetsModule.saveTargets(file)